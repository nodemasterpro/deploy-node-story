---
- name: Manage Story Snapshots
  hosts: localhost
  become: yes
  vars:
    action: "{{ action | default('download') }}"
    snapshot_type: "{{ snapshot_type | default('pruned') }}"
    pruned_url_base: "https://server-3.itrocket.net/testnet/story"
    archive_url_base: "https://server-5.itrocket.net/testnet/story"
    home_dir: "/root/.story"

  tasks:
    - name: Install dependencies
      apt:
        name:
          - curl
          - jq
          - lz4
          - aria2
        state: present

    - name: Stop story and story-geth services
      systemd:
        name: "{{ item }}"
        state: stopped
      loop:
        - story
        - story-geth
      when: action == "import"

    - name: Backup priv_validator_state.json
      copy:
        src: "{{ home_dir }}/story/data/priv_validator_state.json"
        dest: "{{ home_dir }}/story/priv_validator_state.json.backup"
        remote_src: yes
      when: action == "import"

    - name: Get latest snapshot filenames
      uri:
        url: "{{ pruned_url_base if snapshot_type == 'pruned' else archive_url_base }}"
        return_content: yes
      register: snapshot_page

    - name: Extract snapshot filenames
      set_fact:
        story_snapshot: "{{ snapshot_page.content | regex_findall('story_\\d{4}-\\d{2}-\\d{2}_\\d+_snap\\.tar\\.lz4') | sort | last }}"
        geth_snapshot: "{{ snapshot_page.content | regex_findall('geth_story_\\d{4}-\\d{2}-\\d{2}_\\d+_snap\\.tar\\.lz4') | sort | last }}"

    - name: Download pruned snapshots
      shell: "curl {{ pruned_url_base }}/{{ item }} | lz4 -dc - | tar -xf - -C {{ home_dir }}/{{ 'story' if 'story_' in item else 'geth/iliad/geth' }}"
      loop:
        - "{{ story_snapshot }}"
        - "{{ geth_snapshot }}"
      when: action == "download" and snapshot_type == "pruned"

    - name: Download archive snapshots
      shell: "aria2c -x 16 -s 16 -d /tmp -o {{ item }} {{ archive_url_base }}/{{ item }}"
      loop:
        - "{{ story_snapshot }}"
        - "{{ geth_snapshot }}"
      when: action == "download" and snapshot_type == "archive"

    - name: Import pruned snapshots
      block:
        - name: Remove old data
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - "{{ home_dir }}/story/data"
            - "{{ home_dir }}/geth/iliad/geth/chaindata"

        - name: Extract Story snapshot
          shell: "curl {{ pruned_url_base }}/{{ story_snapshot }} | lz4 -dc - | tar -xf - -C {{ home_dir }}/story"

        - name: Extract Geth snapshot
          shell: "curl {{ pruned_url_base }}/{{ geth_snapshot }} | lz4 -dc - | tar -xf - -C {{ home_dir }}/geth/iliad/geth"
      when: action == "import" and snapshot_type == "pruned"

    - name: Import archive snapshots
      block:
        - name: Remove old data
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - "{{ home_dir }}/story/data"
            - "{{ home_dir }}/geth/iliad/geth/chaindata"

        - name: Extract Story snapshot
          shell: "tar -I lz4 -xvf /tmp/{{ story_snapshot }} -C {{ home_dir }}"

        - name: Extract Geth snapshot
          shell: "tar -I lz4 -xvf /tmp/{{ geth_snapshot }} -C {{ home_dir }}/geth/iliad/geth"

        - name: Remove downloaded archive snapshots
          file:
            path: "/tmp/{{ item }}"
            state: absent
          loop:
            - "{{ story_snapshot }}"
            - "{{ geth_snapshot }}"
      when: action == "import" and snapshot_type == "archive"

    - name: Restore priv_validator_state.json
      copy:
        src: "{{ home_dir }}/story/priv_validator_state.json.backup"
        dest: "{{ home_dir }}/story/data/priv_validator_state.json"
        remote_src: yes
      when: action == "import"

    - name: Start story and story-geth services
      systemd:
        name: "{{ item }}"
        state: started
      loop:
        - story
        - story-geth
      when: action == "import"

    - name: Display completion message
      debug:
        msg: "{{ action | capitalize }} of {{ snapshot_type }} snapshot has been completed successfully."